name: Build, Push and Sign Docker Image

on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  #DEV_BRANCH: dev

jobs:
  build_and_push:
    runs-on: arc-runner-set-2
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.3
        with:
          fetch-depth: 1
      - name: Install curl 
        run: |
          sudo apt-get update
          sudo apt-get install -y curl libcurl4-openssl-dev libharfbuzz-dev libfribidi-dev libfreetype6-dev libc6 -y
          sudo apt install build-essential libcurl4-gnutls-dev libxml2-dev libssl-dev jq curl -y
          sudo apt-get install -y ca-certificates
          
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:v0.11.6

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build Docker image
        id: build-and-push
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          #digest=$(docker inspect --format='{{index .RepoDigests 0}}' ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }})
           
      # - name: Set output and write to file
      #   run: |
      #     echo "digest=$digest" >> $GITHUB_OUTPUT
      #   env:
      #     digest: $digest
      #     GITHUB_OUTPUT: $GITHUB_WORKSPACE/output.txt
              
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.5.0

      # - name: Sign the published Docker image
      #   env:
      #     COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
      #     COSIGN_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
      #   run: cosign sign --key  $COSIGN_KEY ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:{{ github.sha }} -y --debug
      #     cat ${{ secrets.COSIGN_PRIVATE_KEY }}
      #     cat ${{ secrets.COSIGN_PASSWORD }}
      #     cat COSIGN_PASSWORD
      #     cat COSIGN_KEY
        
        
        
      - name: sign container image
        run: |
            cosign sign --key env://COSIGN_KEY ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} -y
        env:
          COSIGN_KEY: ${{secrets.COSIGN_PRIVATE_KEY}}
          COSIGN_PASSWORD: ${{secrets.COSIGN_PASSWORD}}
