name: Build, Push and Sign Docker Image

on:
  push:
    branches:
    - main
    - cosign-test

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
    
  build_and_push:
    runs-on: arc-runner-set-2
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.3
        with:
          fetch-depth: 1

      # Install necessary dependencies
      - name: Install curl 
        run: |
          sudo apt-get update
          sudo apt-get install -y curl libcurl4-openssl-dev libharfbuzz-dev libfribidi-dev libfreetype6-dev libc6 -y
          sudo apt install build-essential libcurl4-gnutls-dev libxml2-dev libssl-dev jq curl -y
          
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:v0.11.6
      
      # Log in to the Container registry
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build Docker image and push to registry
      - name: Build and Push Docker image
        id: build-and-push
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          
      # Get the digest of the pushed image
      - name: Get image digest
        id: image-digest
        run: |
          echo "::set-output name=digest::$(docker inspect --format='{{index .RepoDigests 0}}' ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }})"
        
      # Sign the Docker image using Cosign
      - name: Sign container image
        run: |
          echo $COSIGN_PASSWORD | cosign sign --key env://COSIGN_KEY ${{ steps.image-digest.outputs.digest }} -y
        env:
          COSIGN_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}

